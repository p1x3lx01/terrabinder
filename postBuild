#!/bin/bash

set -e

# تحديد نسخة Go
GOVERS=1.21.4

# إنشاء الدلائل اللازمة
mkdir -p \
    $HOME/.local/go/$GOVERS \
    $HOME/go

echo "::: تثبيت Go ${GOVERS}..."
curl -O -L https://golang.org/dl/go${GOVERS}.linux-amd64.tar.gz
tar -C $HOME/.local/go/$GOVERS -zxf go${GOVERS}.linux-amd64.tar.gz
/bin/rm go${GOVERS}.linux-amd64.tar.gz

# تعيين المتغيرات البيئية لـ Go
export GOROOT=$HOME/.local/go/$GOVERS/go
export GOPATH=$HOME/go
export GO111MODULE=on
export PATH=$GOPATH/bin:$GOROOT/bin:$PATH

# تثبيت حزم Go
echo "::: تثبيت gophernotes و gonum..."
go install github.com/gopherdata/gophernotes@latest

echo "::: تثبيت gophernotes و gonum... [تم]"

# إعداد البيئة لـ Go
cat >> $HOME/.setup-go << EOF
## إعداد Go
export GOROOT=$GOROOT
export GOPATH=$GOPATH
export GO111MODULE=on
export PATH=\$GOPATH/bin:\$GOROOT/bin:\$PATH
EOF

cat >> $HOME/.bashrc << EOF
. ~/.setup-go
EOF

# تثبيت نواة Go لـ Jupyter
mkdir -p ./binder/gophernotes
cat >| ./binder/gophernotes/kernel.json << EOF
{
    "argv": [
        "$GOPATH/bin/gophernotes",
        "{connection_file}"
    ],
    "display_name": "Go",
    "language": "go",
    "name": "go",
    "env": {
        "GOPATH": "$GOPATH",
        "GOROOT": "$GOROOT",
        "GO111MODULE": "on",
        "PATH":   "$GOPATH/bin:$GOROOT/bin:$PATH"
    }
}
EOF
jupyter kernelspec install ./binder/gophernotes --user

/bin/rm -rf binder

# استنساخ مستودع 'classic-terra/core' وبناء البرنامج
echo "::: استنساخ مستودع 'classic-terra/core'..."
git clone https://github.com/classic-terra/core/
cd core
git fetch --all --force
git checkout v2.3.0
echo "::: بناء وتثبيت 'classic-terra/core'..."
make build && make install

# العودة إلى الدليل الأصلي
cd ..

# عرض قائمة نوى Jupyter المثبتة
echo "::: قائمة النوى"
jupyter kernelspec list
